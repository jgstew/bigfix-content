<?xml version="1.0" encoding="UTF-8"?>
<BES xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="BES.xsd">
	<Task>
		<Title>Run: log4j2-scan v2.7.1 - Universal JAR - System JRE - UNDO REMEDIATION - Community Version</Title>
		<Description><![CDATA[
				<P><H3>This is Community Content.  When you use these solutions, it is incumbent on your organization to test any solutions provided across the broadest available system base including various OS, storage solutions, and application inventory.</H3></P>
				<P>Please see the <A href="https://forum.bigfix.com/t/log4j-vulnerability-identification-and-3rd-party-remediation-solution-testing-statement/40273"> Community Solution Testing Statement</A></P>
		</P>
		<P>This content is part of a series of community-curated Fixlets, Tasks, and Analyses geared toward finding and remediating Log4j vulnerabilities, including the CVEs referenced at the following URLs:</P>
		<P>
		<A href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45105">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45105</A><BR>
		<A href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45046">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-45046</A><BR>
		<A href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44228">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-44228</A><BR>
		<A href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-4104">https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-4104</A></P>
		
		<P>This is part of a series of content currently published through a community GitHub site.&nbsp; Links to related content include</P>
		<P>Analysis:</P>
		<P><A href="https://github.com/jgstew/bigfix-content/blob/master/analyses/log4j2-scan%20results.bes">log4j2-scan results</A></P>
		<P>Scanning Tasks:<BR>
		<A href="https://github.com/jgstew/bigfix-content/blob/master/fixlet/Logpresso%20log4j2-scan%20-%20Universal.bes">Logpresso log4j2-scan - Universal.bes</A><BR>
		<A href="https://github.com/jgstew/bigfix-content/blob/master/fixlet/Logpresso%20Log4j2-scan%20-%20Universal%20-%20JRE.bes">Logpresso Log4j2-scan - Universal - JRE.bes</A><BR>
		<A href="https://github.com/jgstew/bigfix-content/blob/master/fixlet/Logpresso%20log4j2-scan%20-%20Windows%20x64.bes">Logpresso log4j2-scan - Windows x64.bes</A><BR>
		<A href="https://github.com/jgstew/bigfix-content/blob/master/fixlet/Logpresso%20log4j2-scan%20-%20Linux%20x64.bes">Logpresso log4j2-scan - Linux x64.bes</A><BR>
		<A href="https://github.com/jgstew/bigfix-content/blob/master/fixlet/Logpresso%20log4j2-scan%20-%20MacOS%20x64.bes">Logpresso log4j2-scan - MacOS x64.bes</A></P>
		<P><BR>&nbsp;(be sure to check for the latest version).</P>
		<P>For the latest details and discussion of this content, please see <A href="https://forum.bigfix.com/t/log4j-cve-2021-44228-cve-2021-45046-summary-page/40222">https://forum.bigfix.com/t/log4j-cve-2021-44228-cve-2021-45046-summary-page/40222</A></P>
		<P>&nbsp;</P>
		This task will run log4j2-scan v2.7.1 scanner.<br />		</P>
							</P>
		
        <P><H3>This Action will restore the original versions of JAR files that were previously remediated by a LogPresso scan.</H3></P>
        After restoring the original JAR file versions, a new Scan should be executed to determine the new vulnerability status.<br>
        A new Remediation may then be executed, potentially excluding the paths of whatever application fails to function after remediation.<br>
        <H3>Files that were remediated by ALL prior scans are restored</H3><br>

		<P><H3>NOTE:</H3> This version of the scan fixlet downloads the JAR version of log4j2-scan.  The system-default Java Runtime will be used.&nbsp; This requires the Java command to be present in the default system PATH variable.</P>
		]]>		</Description>
		<Relevance>if exists property "in proxy agent context" then not in proxy agent context else true</Relevance>
		<Relevance>exists files whose(name of it as lowercase = "java" OR name of it as lowercase = "java.exe") of ( ( (folders it) of unique values of (it as trimmed string) of substrings separated by (";";":") of values of (variables "PATH" of it; (if (windows of operating system) then (x64 variables "PATH" of it) else NOTHINGS) ) of environments ) ; ( (folders "bin" of folders of folders of (folders "\Program Files"; folder "\Program Files (x86)")) ) )</Relevance>
		<Relevance><![CDATA[exists find files "log4j2_scan_backup_*.zip" of folders "BPS-Scans" of parent folder of parent folder of client folder of site "actionsite"]]></Relevance> 
		<Category></Category>
		<DownloadSize>646583</DownloadSize>
		<Source>log4j2-scan</Source>
		<SourceID></SourceID>
		<SourceReleaseDate>2022-01-04</SourceReleaseDate>
		<SourceSeverity></SourceSeverity>
		<CVENames></CVENames>
		<SANSID></SANSID>
		<MIMEField>
			<Name>action-ui-metadata</Name>
			<Value>{ "version":"2.7.1","size":646583 }</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-fixlet-modification-time</Name>
			<Value>Tue, 04 Jan 2022 23:50:07 +0000</Value>
		</MIMEField>
		<MIMEField>
			<Name>x-relevance-evaluation-period</Name>
			<Value>01:00:00</Value>
		</MIMEField>
		<Domain>BESC</Domain>
		<Action ID="Action1">
			<Description>
				<PreLink>Click </PreLink>
				<Link>here</Link>
				<PostLink> to run log4j2-scan v2.7.1.</PostLink>
			</Description>
			<ActionScript MIMEType="application/x-Fixlet-Windows-Shell"><![CDATA[
//parameter "exclusionlist" is provided in the Description tab
begin prefetch block
	// Download log4j2-scan:
	add prefetch item name=logpresso-log4j2-scan.jar sha1=873bd80cb034383beda0acb50530cc69de9df4d0 size=646583 url=https://github.com/logpresso/CVE-2021-44228-Scanner/releases/download/v2.7.1/logpresso-log4j2-scan-2.7.1.jar sha256=6d62f81cbdce606b7d22ece905ebc00bca5a332de6220cd221b21fd26ae085df
	collect prefetch items
end prefetch block

utility __Download/logpresso-log4j2-scan.jar

folder create {pathname of parent folder of parent folder of client folder of site "actionsite"}/BPS-Scans
parameter "BPSFolder"="{pathname of folder "BPS-Scans" of parent folder of parent folder of client folder of site "actionsite"}{if windows of operating system then "\" else "/"}"
parameter "RestoreListFile"="{parameter "BPSFolder"}restore-log4j2-scan.txt"


// Setup logpresso-log4j2-scan.jar
if { exists files "logpresso-log4j2-scan.jar" of folders (parameter "BPSFolder")}
  delete "{pathname of file "logpresso-log4j2-scan.jar" of folder (parameter "BPSFolder")}"
endif

// Copy the scanner JAR file to client folder
copy __Download/logpresso-log4j2-scan.jar "{parameter "BPSFolder"}/logpresso-log4j2-scan.jar"




if {windows of operating system}
  delete __appendfile
  appendfile cd "{parameter "BPSFolder"}"
  appendfile del /q "{parameter "RestoreListFile"}"
  appendfile {concatenation "%0d%0a" of ("java -jar %22" & parameter "BPSFolder" & "logpresso-log4j2-scan.jar%22  --restore %22" & it & "%22 >> %22" & parameter "RestoreListFile" & "%22 2>&1"; "echo move /Y %22" & it & "%22 %22" & it & ".restored%22") of pathnames of find files "log4j2_scan_backup_*.zip" of folders (parameter "BPSFolder")}
   
  delete log4j-restore.cmd
  move __appendfile log4j-restore.cmd
  waithidden cmd.exe /c log4j-restore.cmd

else // non-Windows operating system:
  // Get shell binary, should return /bin/sh in most cases:
  parameter "shell_bin" = "{  tuple string items 0 of concatenations ", " of ( pathnames of files "/bin/sh"; pathnames of files whose(name of it as lowercase = "sh" OR name of it as lowercase = "sh.exe") of (folders it) of unique values of (it as trimmed string) of substrings separated by (";";":") of values of (variables "PATH" of it ) of environments) }"

  delete __appendfile
  appendfile #!/bin/sh
  appendfile cd '{parameter "BPSFolder"}' 
  appendfile rm -f "{parameter "RestoreListFile"}"
  appendfile {concatenation "%0a" of ("%22" & parameter "Java_bin" & "%22 -jar %22" & parameter "BPSFolder" & "logpresso-log4j2-scan.jar%22  --restore %22" & it & "%22 >> %22" & parameter "RestoreListFile" & "%22 2>&1 "; "echo mv -f %22" & it & "%22 %22" & it & ".restored%22") of pathnames of find files "log4j2_scan_backup_*.zip" of folders (parameter "BPSFolder")}
  appendfile rm -rf '{parameter "JREFolder"}'
  delete log4j-restore.sh
  move __appendfile log4j-restore.sh
  wait chmod +x log4j-restore.sh
  wait {parameter "shell_bin"} ./log4j-restore.sh
endif


continue if {exists file (parameter "RestoreListFile") whose (modification time of it >= active start time of action)}
action requires restart
// End]]></ActionScript>
		</Action>
	</Task>
</BES>
